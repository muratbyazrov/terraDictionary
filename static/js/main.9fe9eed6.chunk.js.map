{"version":3,"sources":["components/header/Header.js","components/counter/Counter.js","components/speaker/Speaker.js","components/task/Task.js","components/word-item/WordItem.js","components/word-list/WordList.js","components/terra-window/TerraWin.js","components/error-window/ErrorWindow.js","components/app/App.js","reportWebVitals.js","index.js"],"names":["Header","className","Component","Counter","ratingColorStatus","rating","props","color","this","style","backgroundColor","Speaker","setClassName","speaker","speak","taskWord","en","onClick","onMouseOut","width","height","viewBox","fill","xmlns","fillRule","d","Task","taskLang","ru","WordItem","state","classToogle","onCheckWord","key","a","successCounter","errorCounter","showErrWin","nextTask","id","setState","toSpeaCurrentWord","setTimeout","currentWord","listLang","speakFunc","onRun","ratingCounter","WordList","setNewState","wordsArr","elements","map","item","TerraWin","hideStartWin","start","ErrorWindow","hideAndNext","errorWinToogle","visable","App","successes","errors","errorWindowVisable","arr","data","dictionary","indexOf","createNewTaskWord","random","Math","floor","length","createWordsArr","includes","push","sort","toSpeakTaskWord","text","message","SpeechSynthesisUtterance","lang","window","speechSynthesis","newRating","toFixed","mlsec","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fe9eed6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Header.css'\n\nexport default class Header extends Component {\n    render() {\n        return (\n            <h1 className='header'>Выберите правильный перевод</h1>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './Counter.css';\n\n\nexport default class Counter extends Component {\n    \n\n    ratingColorStatus = () => {\n        const {rating} = this.props;\n        if(rating < 3) {\n            this.color = 'red'\n        } else if (rating > 3 && rating < 5) {\n            this.color = 'orange'\n        } else if (rating >= 5 && rating < 7.5) {\n            this.color = 'yellow'\n        } else if (rating >= 7.5) {\n            this.color = 'Lime'\n        }\n    }\n    \n    render() {\n        const {rating} = this.props;\n        this.ratingColorStatus();\n        return (\n            <div className='counter' style={{backgroundColor: `${this.color}`}} >{rating}</div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './Speaker.css';\n\nexport default class Speaker extends Component {\n\n    className = 'speaker btn btn-light'\n\n    setClassName = () => {\n        this.className = 'speaker btn btn-light'\n    }\n\n    speaker = () => {\n        const { speak, taskWord } = this.props;\n        speak(taskWord.en)\n    }\n\n\n    render() {\n        return (\n            <button className={this.className} onClick={() => this.speaker()} onMouseOut={() => this.setClassName()}>\n                <svg width=\"1.5em\" height=\"1.5em\" viewBox=\"0 0 16 16\" className=\"bi bi-volume-up\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path fillRule=\"evenodd\" d=\"M6.717 3.55A.5.5 0 0 1 7 4v8a.5.5 0 0 1-.812.39L3.825 10.5H1.5A.5.5 0 0 1 1 10V6a.5.5 0 0 1 .5-.5h2.325l2.363-1.89a.5.5 0 0 1 .529-.06zM6 5.04L4.312 6.39A.5.5 0 0 1 4 6.5H2v3h2a.5.5 0 0 1 .312.11L6 10.96V5.04z\" />\n                    <path d=\"M11.536 14.01A8.473 8.473 0 0 0 14.026 8a8.473 8.473 0 0 0-2.49-6.01l-.708.707A7.476 7.476 0 0 1 13.025 8c0 2.071-.84 3.946-2.197 5.303l.708.707z\" />\n                    <path d=\"M10.121 12.596A6.48 6.48 0 0 0 12.025 8a6.48 6.48 0 0 0-1.904-4.596l-.707.707A5.483 5.483 0 0 1 11.025 8a5.483 5.483 0 0 1-1.61 3.89l.706.706z\" />\n                    <path d=\"M8.707 11.182A4.486 4.486 0 0 0 10.025 8a4.486 4.486 0 0 0-1.318-3.182L8 5.525A3.489 3.489 0 0 1 9.025 8 3.49 3.49 0 0 1 8 10.475l.707.707z\" />\n                </svg>\n            </button >\n        )\n    }\n}","import React, { Component } from 'react';\nimport './Task.css';\nimport Counter from '../counter/Counter';\nimport Speaker from '../speaker/Speaker';\n\nexport default class Task extends Component {\n\n    render() {\n        const { taskWord, taskLang, rating, speak } = this.props;\n        return (\n            <div className='task'>\n                <h2 className='task__title'>{taskLang ? taskWord.ru : taskWord.en}</h2>\n                <div className='task__buttons'>\n                    <Counter rating={rating} />\n                    <div className={!taskLang? 'show' : 'hide'}>\n                        <Speaker\n                            taskWord={taskWord}\n                            speak={speak}\n                        />\n                    </div>\n\n                </div>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './WordItem.css'\n\n\nexport default class WordItem extends Component {\n\n    state = {\n        classToogle: \"btn btn-outline-info\",\n    }\n\n    onCheckWord = async (key) => {\n        const { successCounter, errorCounter, taskWord, showErrWin, nextTask } = this.props;\n        if (key === taskWord.id) {\n            await successCounter();\n            this.setState({\n                classToogle: \"btn btn-success\"\n            })\n            this.toSpeaCurrentWord();\n            nextTask(1700);\n        } else {\n            await errorCounter();\n            this.setState({\n                classToogle: \"btn btn-danger\"\n            })\n            showErrWin()\n        }\n\n        setTimeout(() => {\n            this.setState({\n                classToogle: \"btn btn-outline-info\"\n            })\n        }, 1000);\n\n    }\n\n    toSpeaCurrentWord = () => {\n        const { currentWord, listLang, speakFunc } = this.props;\n        if (!listLang) {\n            speakFunc(currentWord.en)\n        }\n    }\n\n\n    onRun = async (key) => {\n        await this.onCheckWord(key);\n        const { ratingCounter } = this.props;\n        await ratingCounter();\n        \n    }\n\n\n    render() {\n        const { listLang, currentWord } = this.props;\n        return (\n            <button onClick={() => this.onRun(currentWord.id)} className={this.state.classToogle}>\n                {listLang ? currentWord.ru : currentWord.en}\n            </button>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './WordList.css';\nimport WordItem from '../word-item/WordItem';\n\n\nexport default class WordList extends Component {\n  \n    render() {\n        const { setNewState, taskWord, wordsArr, \n            listLang, speakFunc, successCounter, \n            errorCounter, ratingCounter, showErrWin, \n            nextTask } = this.props;\n        \n        const elements = wordsArr.map((item) => {\n            return <WordItem\n                key={item.id}\n                setNewState={setNewState}\n                taskWord={taskWord}\n                currentWord={item}\n                listLang={listLang}\n                speakFunc={speakFunc}\n                successCounter={successCounter}\n                errorCounter={errorCounter}\n                ratingCounter={ratingCounter}\n                showErrWin={showErrWin}\n                nextTask={nextTask}\n            />\n        })\n        return <div className='word-list'>{elements}</div> \n    }\n}","import React, { Component } from 'react';\nimport './TerraWin.css'\n\nexport default class TerraWin extends Component {\n    \n    state = {\n        className: 'terra'\n    }\n    \n    hideStartWin = () => {\n        this.setState({\n            className: 'terra-hide'\n        })\n    }\n    \n    start = () => {\n        const {setNewState} = this.props;\n        this.hideStartWin()\n        setNewState();\n    }\n\n    render() {\n        return (\n            <div className={this.state.className}>\n                <div className='terra__logo'></div>\n                <h1 className='terra__title display-4'>terraDictionary</h1>\n                <button className='btn btn-info terra__button' onClick={ () => this.start() }>Учиться!</button>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './ErrorWindow.css';\nimport Speaker from '../speaker/Speaker'\n\nexport default class ErrorWindow extends Component {\n    hideAndNext = () => {\n        const { errorWinToogle, nextTask } = this.props;\n        errorWinToogle();\n        nextTask(0);\n    }\n\n    render() {\n        const { taskWord, visable, speak } = this.props;\n        const className = `error-window ${visable ? 'show' : 'hide'}`\n        return (\n            <div className={className}>\n                <h4 className='error-window__title'>Запомните</h4>\n                <p className='error-window__task-word alert alert-warning'>{taskWord.en} - {taskWord.ru}</p>\n                <div className='error-window__speaker'>\n                    <Speaker\n                        speak={() => speak(taskWord.en)}\n                        taskWord={taskWord}\n                    />\n                </div>\n                <button className='error-window__button btn btn-light' onClick={() => this.hideAndNext()}>Окей, дальше</button>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Header from '../header/Header';\nimport Task from '../task/Task';\nimport WordList from '../word-list/WordList';\nimport dictionary from '../../data/base-1.json';\nimport TerraWin from '../terra-window/TerraWin';\nimport ErrorWindow from '../error-window/ErrorWindow';\n\n\nexport default class App extends Component {\n\n  state = {\n    taskWord: {},\n    wordsArr: [],\n    taskLang: false,\n    listLang: !this.setState.taskLang,\n    successes: 0,\n    errors: 0,\n    rating: 0,\n    errorWindowVisable: false\n  }\n\n  arr = [];\n  data = dictionary.map((item) => {\n    return item.id = dictionary.indexOf(item);\n  });\n\n\n\n  createNewTaskWord = () => {\n    const random = Math.floor(Math.random() * Math.floor(dictionary.length));\n    const taskWord = dictionary[random]\n    this.arr = [taskWord]\n    return taskWord;\n  }\n\n  createWordsArr = () => {\n    while (this.arr.length <= 5) {\n      const random = Math.floor(Math.random() * Math.floor(dictionary.length));\n      if (!this.arr.includes(dictionary[random])) {\n        this.arr.push(dictionary[random])\n      }\n    }\n    this.arr.sort(() => Math.random() - 0.5) // перемешивает порядок слов\n    return this.arr\n  }\n\n  setNewState = async () => {\n    const taskWord = this.createNewTaskWord();\n    const arr = this.createWordsArr();\n    const random = Math.random();\n    const taskLang = random <= 0.5\n\n    await this.setState({\n      taskWord: taskWord,\n      wordsArr: arr,\n      taskLang: taskLang,\n      listLang: !taskLang,\n    })\n\n    this.toSpeakTaskWord();\n  }\n\n  toSpeakTaskWord = () => {\n    if (!this.state.taskLang) {\n      this.speak(this.state.taskWord.en)\n    }\n  }\n\n  speak = (text) => {\n    const message = new SpeechSynthesisUtterance();\n    message.lang = \"en-US\";\n    message.text = text;\n    window.speechSynthesis.speak(message);\n  }\n\n  successCounter = () => {\n    this.setState({\n      successes: this.state.successes + 1\n    })\n  }\n  errorCounter = () => {\n    this.setState({\n      errors: this.state.errors + 1\n    })\n  }\n\n  ratingCounter = () => {\n    let newRating = this.state.successes / (this.state.successes + this.state.errors) * 10;\n    newRating = newRating.toFixed(1);\n    this.setState({\n      rating: newRating\n    })\n  }\n\n  errorWinToogle = () => {\n    this.setState({\n      errorWindowVisable: !this.state.errorWindowVisable\n    })\n  }\n\n  nextTask = (mlsec) => {\n    setTimeout(() => {\n        this.setNewState();\n    }, mlsec);\n}\n\n  render() {\n    return (\n      <div className='eclipse'>\n        <TerraWin setNewState={this.setNewState} />\n        <ErrorWindow\n          taskWord={this.state.taskWord}\n          visable={this.state.errorWindowVisable}\n          errorWinToogle={this.errorWinToogle}\n          nextTask={this.nextTask}\n          speak={this.speak}\n        />\n        <Header className=\"alert alert-success\" />\n        <Task\n          taskWord={this.state.taskWord}\n          setNewState={this.setNewState}\n          taskLang={this.state.taskLang}\n          rating={this.state.rating}\n          speak={this.speak}\n\n        />\n        <WordList\n          wordsArr={this.state.wordsArr}\n          setNewState={this.setNewState}\n          taskWord={this.state.taskWord}\n          listLang={this.state.listLang}\n          speakFunc={this.speak}\n          successCounter={this.successCounter}\n          errorCounter={this.errorCounter}\n          ratingCounter={this.ratingCounter}\n          taskLang={this.state.taskLang}\n\n          showErrWin={() => this.errorWinToogle()}\n\n          nextTask={this.nextTask}\n        />\n      </div>\n    )\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nreportWebVitals();\n"],"sourceRoot":""}