{"version":3,"sources":["components/header/Header.js","components/counter/Counter.js","components/speaker/Speaker.js","components/task/Task.js","components/word-item/WordItem.js","components/word-list/WordList.js","components/terra-window/TerraWin.js","components/error-window/ErrorWindow.js","components/app/App.js","reportWebVitals.js","index.js"],"names":["Header","className","Component","Counter","ratingColorStatus","rating","props","color","this","style","backgroundColor","Speaker","speaker","toSpeakTaskWord","setClassName","onClick","onMouseOut","width","height","viewBox","fill","xmlns","fillRule","d","Task","taskWord","taskLang","ru","en","WordItem","state","classToogle","onCheckWord","key","a","successCounter","errorCounter","showErrWin","nextTask","id","setState","setTimeout","toSpeaCurrentWord","currentWord","listLang","speakFunc","onRun","ratingCounter","WordList","setNewState","wordsArr","elements","map","item","TerraWin","hideStartWin","start","ErrorWindow","hideAndNext","errorWinToogle","visable","App","successes","errors","errorWindowVisable","arr","data","dictionary","indexOf","createNewTaskWord","random","Math","floor","length","createWordsArr","includes","push","sort","speak","text","message","SpeechSynthesisUtterance","lang","window","speechSynthesis","newRating","toFixed","mlsec","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.757ff57f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Header.css'\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <h1 className='header'>Выберите правильный перевод</h1>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './Counter.css';\r\n\r\n\r\nexport default class Counter extends Component {\r\n    \r\n\r\n    ratingColorStatus = () => {\r\n        const {rating} = this.props;\r\n        if(rating < 3) {\r\n            this.color = 'red'\r\n        } else if (rating > 3 && rating < 5) {\r\n            this.color = 'orange'\r\n        } else if (rating >= 5 && rating < 7.5) {\r\n            this.color = 'yellow'\r\n        } else if (rating >= 7.5) {\r\n            this.color = 'Lime'\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const {rating} = this.props;\r\n        this.ratingColorStatus();\r\n        return (\r\n            <div className='counter' style={{backgroundColor: `${this.color}`}} >{rating}</div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './Speaker.css';\r\n\r\nexport default class Speaker extends Component {\r\n\r\n    speaker = () => {\r\n        const { toSpeakTaskWord } = this.props;\r\n        toSpeakTaskWord()\r\n    }\r\n\r\n    className = 'speaker btn btn-light'\r\n\r\n    setClassName = () => {\r\n        this.className = 'speaker btn btn-light'\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <button className={this.className} onClick={() => this.speaker()} onMouseOut={() => this.setClassName()}>\r\n                <svg width=\"1.5em\" height=\"1.5em\" viewBox=\"0 0 16 16\" className=\"bi bi-volume-up\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                    <path fillRule=\"evenodd\" d=\"M6.717 3.55A.5.5 0 0 1 7 4v8a.5.5 0 0 1-.812.39L3.825 10.5H1.5A.5.5 0 0 1 1 10V6a.5.5 0 0 1 .5-.5h2.325l2.363-1.89a.5.5 0 0 1 .529-.06zM6 5.04L4.312 6.39A.5.5 0 0 1 4 6.5H2v3h2a.5.5 0 0 1 .312.11L6 10.96V5.04z\" />\r\n                    <path d=\"M11.536 14.01A8.473 8.473 0 0 0 14.026 8a8.473 8.473 0 0 0-2.49-6.01l-.708.707A7.476 7.476 0 0 1 13.025 8c0 2.071-.84 3.946-2.197 5.303l.708.707z\" />\r\n                    <path d=\"M10.121 12.596A6.48 6.48 0 0 0 12.025 8a6.48 6.48 0 0 0-1.904-4.596l-.707.707A5.483 5.483 0 0 1 11.025 8a5.483 5.483 0 0 1-1.61 3.89l.706.706z\" />\r\n                    <path d=\"M8.707 11.182A4.486 4.486 0 0 0 10.025 8a4.486 4.486 0 0 0-1.318-3.182L8 5.525A3.489 3.489 0 0 1 9.025 8 3.49 3.49 0 0 1 8 10.475l.707.707z\" />\r\n                </svg>\r\n            </button >\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './Task.css';\r\nimport Counter from '../counter/Counter';\r\nimport Speaker from '../speaker/Speaker';\r\n\r\nexport default class Task extends Component {\r\n\r\n    render() {\r\n        const { taskWord, taskLang, rating, toSpeakTaskWord } = this.props;\r\n        return (\r\n            <div className='task'>\r\n                <h2 className='task__title'>{taskLang ? taskWord.ru : taskWord.en}</h2>\r\n                <div className='task__buttons'>\r\n                    <Counter rating={rating} />\r\n                    <Speaker toSpeakTaskWord={toSpeakTaskWord}/>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './WordItem.css'\r\n\r\n\r\nexport default class WordItem extends Component {\r\n\r\n    state = {\r\n        classToogle: \"btn btn-outline-info\",\r\n    }\r\n\r\n    onCheckWord = async (key) => {\r\n        const { successCounter, errorCounter, taskWord, showErrWin, nextTask } = this.props;\r\n        if (key === taskWord.id) {\r\n            await successCounter();\r\n            this.setState({\r\n                classToogle: \"btn btn-success\"\r\n            })\r\n            nextTask(1700);\r\n        } else {\r\n            await errorCounter();\r\n            this.setState({\r\n                classToogle: \"btn btn-danger\"\r\n            })\r\n            showErrWin()\r\n        }\r\n\r\n        setTimeout(() => {\r\n            this.setState({\r\n                classToogle: \"btn btn-outline-info\"\r\n            })\r\n        }, 1000);\r\n\r\n    }\r\n\r\n\r\n\r\n    toSpeaCurrentWord = () => {\r\n        const { currentWord, listLang, speakFunc } = this.props;\r\n        if (!listLang) {\r\n            speakFunc(currentWord.en)\r\n        }\r\n    }\r\n\r\n\r\n    onRun = async (key) => {\r\n        await this.onCheckWord(key);\r\n        const { ratingCounter } = this.props;\r\n        await ratingCounter();\r\n        this.toSpeaCurrentWord();\r\n    }\r\n\r\n\r\n    render() {\r\n        const { listLang, currentWord } = this.props;\r\n        return (\r\n            <button onClick={() => this.onRun(currentWord.id)} className={this.state.classToogle}>\r\n                {listLang ? currentWord.ru : currentWord.en}\r\n            </button>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './WordList.css';\r\nimport WordItem from '../word-item/WordItem';\r\n\r\n\r\nexport default class WordList extends Component {\r\n  \r\n    render() {\r\n        const { setNewState, taskWord, wordsArr, \r\n            listLang, speakFunc, successCounter, \r\n            errorCounter, ratingCounter, showErrWin, \r\n            nextTask } = this.props;\r\n        \r\n        const elements = wordsArr.map((item) => {\r\n            return <WordItem\r\n                key={item.id}\r\n                setNewState={setNewState}\r\n                taskWord={taskWord}\r\n                currentWord={item}\r\n                listLang={listLang}\r\n                speakFunc={speakFunc}\r\n                successCounter={successCounter}\r\n                errorCounter={errorCounter}\r\n                ratingCounter={ratingCounter}\r\n                showErrWin={showErrWin}\r\n                nextTask={nextTask}\r\n            />\r\n        })\r\n        return <div className='word-list'>{elements}</div> \r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './TerraWin.css'\r\n\r\nexport default class TerraWin extends Component {\r\n    \r\n    state = {\r\n        className: 'terra'\r\n    }\r\n    \r\n    hideStartWin = () => {\r\n        this.setState({\r\n            className: 'terra-hide'\r\n        })\r\n    }\r\n    \r\n    start = () => {\r\n        const {setNewState} = this.props;\r\n        this.hideStartWin()\r\n        setNewState();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.state.className}>\r\n                <div className='terra__logo'></div>\r\n                <h1 className='terra__title display-4'>terraDictionary</h1>\r\n                <button className='btn btn-info terra__button' onClick={ () => this.start() }>Учиться!</button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './ErrorWindow.css';\r\nimport Speaker from '../speaker/Speaker'\r\n\r\nexport default class ErrorWindow extends Component {\r\n    hideAndNext = () => {\r\n        const { errorWinToogle, nextTask } = this.props;\r\n        errorWinToogle();\r\n        nextTask(0);\r\n    }\r\n\r\n    render() {\r\n        const { taskWord, toSpeakTaskWord, visable } = this.props;\r\n        const className = `error-window ${visable ? 'show' : 'hide'}`\r\n        return (\r\n            <div className={className}>\r\n                <h4 className='error-window__title'>Запомните</h4>\r\n                <p className='error-window__task-word alert alert-warning'>{taskWord.en} - {taskWord.ru}</p>\r\n                <div className='error-window__speaker'>\r\n                    <Speaker toSpeakTaskWord={() => toSpeakTaskWord()} />\r\n                </div>\r\n                <button className='error-window__button btn btn-light' onClick={() => this.hideAndNext()}>Окей, дальше</button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Header from '../header/Header';\r\nimport Task from '../task/Task';\r\nimport WordList from '../word-list/WordList';\r\nimport dictionary from '../../data/murat-dictionary.json';\r\nimport TerraWin from '../terra-window/TerraWin';\r\nimport ErrorWindow from '../error-window/ErrorWindow';\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n  state = {\r\n    taskWord: {},\r\n    wordsArr: [],\r\n    taskLang: false,\r\n    listLang: !this.setState.taskLang,\r\n    successes: 0,\r\n    errors: 0,\r\n    rating: 0,\r\n    errorWindowVisable: false\r\n  }\r\n\r\n  arr = [];\r\n  data = dictionary.map((item) => {\r\n    return item.id = dictionary.indexOf(item);\r\n  });\r\n\r\n\r\n\r\n  createNewTaskWord = () => {\r\n    const random = Math.floor(Math.random() * Math.floor(dictionary.length));\r\n    const taskWord = dictionary[random]\r\n    this.arr = [taskWord]\r\n    return taskWord;\r\n  }\r\n\r\n  createWordsArr = () => {\r\n    while (this.arr.length <= 5) {\r\n      const random = Math.floor(Math.random() * Math.floor(dictionary.length));\r\n      if (!this.arr.includes(dictionary[random])) {\r\n        this.arr.push(dictionary[random])\r\n      }\r\n    }\r\n    this.arr.sort(() => Math.random() - 0.5) // перемешивает порядок слов\r\n    return this.arr\r\n  }\r\n\r\n  setNewState = async () => {\r\n    const taskWord = this.createNewTaskWord();\r\n    const arr = this.createWordsArr();\r\n    const random = Math.random();\r\n    const taskLang = random > 0.5 ? false : true\r\n\r\n    await this.setState({\r\n      taskWord: taskWord,\r\n      wordsArr: arr,\r\n      taskLang: taskLang,\r\n      listLang: !taskLang,\r\n    })\r\n\r\n    this.toSpeakTaskWord();\r\n  }\r\n\r\n  speak = (text) => {\r\n    const message = new SpeechSynthesisUtterance();\r\n    message.lang = \"en-En\";\r\n    message.text = text;\r\n    window.speechSynthesis.speak(message);\r\n  }\r\n\r\n  toSpeakTaskWord = () => {\r\n    if (!this.state.taskLang) {\r\n      this.speak(this.state.taskWord.en)\r\n    }\r\n  }\r\n\r\n\r\n  successCounter = () => {\r\n    this.setState({\r\n      successes: this.state.successes + 1\r\n    })\r\n  }\r\n  errorCounter = () => {\r\n    this.setState({\r\n      errors: this.state.errors + 1\r\n    })\r\n  }\r\n\r\n  ratingCounter = () => {\r\n    let newRating = this.state.successes / (this.state.successes + this.state.errors) * 10;\r\n    newRating = newRating.toFixed(1);\r\n    this.setState({\r\n      rating: newRating\r\n    })\r\n  }\r\n\r\n  errorWinToogle = () => {\r\n    this.setState({\r\n      errorWindowVisable: !this.state.errorWindowVisable\r\n    })\r\n  }\r\n  \r\n  nextTask = (mlsec) => {\r\n    setTimeout(() => {\r\n        this.setNewState();\r\n    }, mlsec);\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div className='eclipse'>\r\n        <TerraWin setNewState={this.setNewState} />\r\n        <ErrorWindow\r\n          taskWord={this.state.taskWord}\r\n          toSpeakTaskWord={this.toSpeakTaskWord}\r\n          visable={this.state.errorWindowVisable}\r\n          errorWinToogle={this.errorWinToogle}\r\n          nextTask={this.nextTask}\r\n        />\r\n        <Header className=\"alert alert-success\" />\r\n        <Task\r\n          taskWord={this.state.taskWord}\r\n          setNewState={this.setNewState}\r\n          taskLang={this.state.taskLang}\r\n          rating={this.state.rating}\r\n          toSpeakTaskWord={this.toSpeakTaskWord}\r\n        />\r\n        <WordList\r\n          wordsArr={this.state.wordsArr}\r\n          setNewState={this.setNewState}\r\n          taskWord={this.state.taskWord}\r\n          listLang={this.state.listLang}\r\n          speakFunc={this.speak}\r\n          successCounter={this.successCounter}\r\n          errorCounter={this.errorCounter}\r\n          ratingCounter={this.ratingCounter}\r\n          taskLang={this.state.taskLang}\r\n\r\n          showErrWin={() => this.errorWinToogle()}\r\n\r\n          nextTask={this.nextTask}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nreportWebVitals();\r\n"],"sourceRoot":""}