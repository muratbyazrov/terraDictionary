{"version":3,"sources":["components/header/Header.js","components/counter/Counter.js","components/task/Task.js","components/word-item/WordItem.js","components/word-list/WordList.js","components/terra-window/TerraWin.js","components/app/App.js","reportWebVitals.js","index.js"],"names":["Header","className","Component","Counter","ratingColorStatus","rating","props","color","this","style","backgroundColor","Task","taskWord","taskLang","ru","en","WordItem","state","classToogle","onCheckWord","key","a","setNewState","successCounter","errorCounter","id","setState","setTimeout","toSpeaCurrentWord","currentWord","listLang","speakFunc","onRun","ratingCounter","onClick","WordList","wordsArr","elements","map","item","TerraWin","hideStartWin","start","App","successes","errors","arr","data","dictionary","indexOf","createNewTaskWord","random","Math","floor","length","createWordsArr","includes","push","sort","toSpeakTaskWord","speak","text","message","SpeechSynthesisUtterance","lang","window","speechSynthesis","newRating","toFixed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d003b219.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Header.css'\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <h1 className='header'>Выберите правильный перевод</h1>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './Counter.css';\r\n\r\n\r\nexport default class Counter extends Component {\r\n    \r\n\r\n    ratingColorStatus = () => {\r\n        const {rating} = this.props;\r\n        if(rating < 3) {\r\n            this.color = 'red'\r\n        } else if (rating > 3 && rating < 5) {\r\n            this.color = 'orange'\r\n        } else if (rating >= 5 && rating < 7.5) {\r\n            this.color = 'yellow'\r\n        } else if (rating >= 7.5) {\r\n            this.color = 'Lime'\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const {rating} = this.props;\r\n        this.ratingColorStatus();\r\n        return (\r\n            <div className='counter' style={{backgroundColor: `${this.color}`}} >{rating}</div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './Task.css';\r\nimport Counter from '../counter/Counter';\r\n\r\nexport default class Task extends Component {\r\n\r\n    render() {\r\n        const { taskWord, taskLang, rating } = this.props;\r\n        return (\r\n            <div className='task'>\r\n                <h2 className='task__title'>{taskLang ? taskWord.ru : taskWord.en}</h2>\r\n                <Counter\r\n                    rating={rating}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './WordItem.css'\r\n\r\n\r\nexport default class WordItem extends Component {\r\n\r\n    state = {\r\n        classToogle: \"btn btn-outline-info\",\r\n    }\r\n\r\n    onCheckWord = async (key) => {\r\n        const { setNewState, successCounter, errorCounter, taskWord } = this.props;\r\n        if (key === taskWord.id) {\r\n            await successCounter();\r\n            this.setState({\r\n                classToogle: \"btn btn-success\"\r\n            })\r\n        } else {\r\n            await errorCounter();\r\n            this.setState({\r\n                classToogle: \"btn btn-danger\"\r\n            })\r\n        }\r\n\r\n        setTimeout(() => {\r\n            this.setState({\r\n                classToogle: \"btn btn-outline-info\"\r\n            })\r\n        }, 1000);\r\n\r\n        setTimeout(() => {\r\n            setNewState();\r\n        }, 1700);\r\n    }\r\n\r\n\r\n    toSpeaCurrentWord = () => {\r\n        const { currentWord, listLang, speakFunc } = this.props;\r\n        if (!listLang) {\r\n            speakFunc(currentWord.en)\r\n        }\r\n    }\r\n\r\n\r\n    onRun = async (key) => {\r\n        await this.onCheckWord(key);\r\n        const { ratingCounter } = this.props;\r\n        await ratingCounter();\r\n        this.toSpeaCurrentWord();\r\n    }\r\n\r\n\r\n    render() {\r\n        const { listLang, currentWord } = this.props;\r\n        return (\r\n            <button onClick={() => this.onRun(currentWord.id)} className={this.state.classToogle}>\r\n                {listLang ? currentWord.ru : currentWord.en}\r\n            </button>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './WordList.css';\r\nimport WordItem from '../word-item/WordItem';\r\n\r\n\r\nexport default class WordList extends Component {\r\n  \r\n    render() {\r\n        const { setNewState, taskWord, wordsArr, listLang, speakFunc, successCounter, errorCounter, ratingCounter } = this.props;\r\n        \r\n        const elements = wordsArr.map((item) => {\r\n            return <WordItem\r\n                key={item.id}\r\n                setNewState={setNewState}\r\n                taskWord={taskWord}\r\n                currentWord={item}\r\n                listLang={listLang}\r\n                speakFunc={speakFunc}\r\n                successCounter={successCounter}\r\n                errorCounter={errorCounter}\r\n                ratingCounter={ratingCounter}\r\n\r\n            />\r\n        })\r\n        return <div className='word-list'>{elements}</div> \r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './TerraWin.css'\r\n\r\nexport default class TerraWin extends Component {\r\n    \r\n    state = {\r\n        className: 'terra'\r\n    }\r\n    \r\n    hideStartWin = () => {\r\n        this.setState({\r\n            className: 'terra-hide'\r\n        })\r\n    }\r\n    \r\n    start = () => {\r\n        const {setNewState} = this.props;\r\n        this.hideStartWin()\r\n        setNewState();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.state.className}>\r\n                <div className='terra__logo'></div>\r\n                <h1 className='terra__title display-4'>terraDictionary</h1>\r\n                <button className='btn btn-info terra__button' onClick={ () => this.start() }>Учиться!</button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Header from '../header/Header';\r\nimport Task from '../task/Task';\r\nimport WordList from '../word-list/WordList';\r\nimport dictionary from '../../data/murat-dictionary.json';\r\nimport TerraWin from '../terra-window/TerraWin';\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n  state = {\r\n    taskWord: {},\r\n    wordsArr: [],\r\n    taskLang: false,\r\n    listLang: !this.setState.taskLang,\r\n    successes: 0,\r\n    errors: 0,\r\n    rating: 0\r\n  }\r\n\r\n  arr = [];\r\n  data = dictionary.map((item) => {\r\n    return item.id = dictionary.indexOf(item);\r\n  });\r\n \r\n\r\n\r\n  createNewTaskWord = () => {\r\n    const random = Math.floor(Math.random() * Math.floor(dictionary.length));\r\n    const taskWord = dictionary[random]\r\n    this.arr = [taskWord]\r\n    return taskWord;\r\n  }\r\n\r\n  createWordsArr = () => {\r\n    while (this.arr.length <= 5) {\r\n      const random = Math.floor(Math.random() * Math.floor(dictionary.length));\r\n      if (!this.arr.includes(dictionary[random])) {\r\n        this.arr.push(dictionary[random])\r\n      }\r\n    }\r\n    this.arr.sort(() => Math.random() - 0.5) // перемешивает порядок слов\r\n    return this.arr\r\n  }\r\n\r\n  setNewState = async () => {\r\n    const taskWord = this.createNewTaskWord();\r\n    const arr = this.createWordsArr();\r\n    const random = Math.random();\r\n    const taskLang = random > 0.5 ? false : true\r\n\r\n    await this.setState({\r\n      taskWord: taskWord,\r\n      wordsArr: arr,\r\n      taskLang: taskLang,\r\n      listLang: !taskLang,\r\n    })\r\n\r\n    this.toSpeakTaskWord();\r\n  }\r\n\r\n  speak = (text) => {\r\n    const message = new SpeechSynthesisUtterance();\r\n    message.lang = \"en-En\";\r\n    message.text = text;\r\n    window.speechSynthesis.speak(message);\r\n  }\r\n\r\n  toSpeakTaskWord = () => {\r\n    if (!this.state.taskLang) {\r\n      this.speak(this.state.taskWord.en)\r\n    }\r\n  }\r\n\r\n\r\n  successCounter = () => {\r\n    this.setState({\r\n      successes: this.state.successes + 1\r\n    })\r\n  }\r\n  errorCounter = () => {\r\n    this.setState({\r\n      errors: this.state.errors + 1\r\n    })\r\n  }\r\n\r\n  ratingCounter = () => {\r\n    let newRating = this.state.successes / (this.state.successes + this.state.errors) * 10;\r\n    newRating = newRating.toFixed(1);\r\n    this.setState({\r\n      rating: newRating\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <TerraWin setNewState={this.setNewState}/>\r\n        <Header className=\"alert alert-success\" />\r\n        <Task\r\n          taskWord={this.state.taskWord}\r\n          setNewState={this.setNewState}\r\n          taskLang={this.state.taskLang}\r\n          rating={this.state.rating}\r\n        />\r\n        <WordList \r\n          wordsArr={this.state.wordsArr}\r\n          setNewState={this.setNewState}\r\n          taskWord={this.state.taskWord}\r\n          listLang={this.state.listLang}\r\n          speakFunc={this.speak}\r\n          successCounter={this.successCounter}\r\n          errorCounter={this.errorCounter}\r\n          ratingCounter={this.ratingCounter}\r\n          taskLang={this.state.taskLang}\r\n        />\r\n      </>\r\n    )\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nreportWebVitals();\r\n"],"sourceRoot":""}